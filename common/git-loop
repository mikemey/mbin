#!/usr/bin/env bash

function print_usage () {
  echo -e "\n usage: $(basename $0) [OPTIONS] command"
  echo -e "\nexecute 'command' in all git-managed sub-directories"
  echo -e "\nOPTIONS"
  echo -e "   -b <branch>    executes 'command' only if current branch name matches"
  echo -e "   -x             stop processing immediately when 'command' returns an error-code"
  echo -e "   -h             show this help"
}

EXIT_ON_ERROR=false

while getopts "b:hx" option
do
  case $option in
    b) branch="$OPTARG";;
    h)
      print_usage
      exit
      ;;
    x) EXIT_ON_ERROR=true;;
  esac
done

ret_val=0
working_dir=$(pwd)
params="${@:$OPTIND}"

function execute_parameters {
  if [ -f "$working_dir/$params" ]; then
    bash "$working_dir/$params"
  else
    eval "$params"
  fi
  ret_val=$?
}

for dir in *
  do if [ -d "$dir/.git" ]
    then
      cd $dir
      current_branch=$(git rev-parse --abbrev-ref HEAD)
      if [ -e $branch ] || [[ ${current_branch} =~ ${branch} ]]; then
          printf "\n${FG_GREEN}==== ${FG_LIGHT_GREEN}${dir} ${FG_LIGHT_YELLOW}[${current_branch}]${FG_DEFAULT}\n"
          execute_parameters
      fi
      cd "$working_dir"
      if [[ $EXIT_ON_ERROR == true && $ret_val != 0 ]]; then
        exit
      fi
  fi
done
