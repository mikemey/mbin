#!/usr/bin/env bash

function print_usage () {
  echo -e "\n usage: $(basename $0) [ -h ] DIRECTION [OPTIONS] file"
  echo -e "\nssh to $MEMORIA when no arguments given."
  echo -e "Parameters:"
  echo -e "\t -h  \t show this help"
  echo "DIRECTION"
  echo -e "\t -c  \t send to current (default)"
  echo -e "\t -s  \t send to series"
  echo -e "\t -m  \t send to movies"
  echo -e "\t -gs \t get series"
  echo -e "\t -gm \t get movies"
  echo "OPTIONS"
  echo -e "\t -d  \t dry-run rsync command"
  echo -e "\t -l  \t copy symlinks as symlinks"
  echo -e "\t -p  \t only prints rsync command"
  echo -e "\t -R  \t use relative path names"
}

function check_env () {
  if [[ ! ${!1} ]]; then
    echo "Environment variable '$1' not set!"
    exit
  fi
}

check_env MEMORIA

if [[ $# -eq 0 ]]; then
  echo "sshing into $MEMORIA"
  ssh "$MEMORIA"
  exit
fi

check_env MEMORIA_CUR
check_env MEMORIA_SER
check_env MEMORIA_MOV

PATH_ARGS=( "$@" )
USE_RELATIVE_PATHS=
DRY_RUN=
PRINT_ONLY=
COPY_SYMLINKS=

function remove_first_path_arg () {
  PATH_ARGS=( "${PATH_ARGS[@]:1}" )
}

function check_options () {
  remove_first_path_arg # remove DIRECTION parameter
  HAS_OPTION=true
  while [[ $HAS_OPTION == true ]]; do
    case "${PATH_ARGS[0]}" in
      "-d" )
        DRY_RUN=true
      ;;
      "-l" )
        COPY_SYMLINKS=true
      ;;
      "-p" )
        PRINT_ONLY=true
      ;;
      "-R" )
        USE_RELATIVE_PATHS=true
      ;;
      * )
        HAS_OPTION=false
      ;;
    esac
    [[ $HAS_OPTION == true ]] && remove_first_path_arg
  done
}

case "${PATH_ARGS[0]}" in
  "-c" )
    check_options
    SOURCES=( "${PATH_ARGS[@]}" )
    TARGET="$MEMORIA:$MEMORIA_CUR"
  ;;
  "-s" )
    check_options
    SOURCES=( "${PATH_ARGS[@]}" )
    TARGET="$MEMORIA:$MEMORIA_SER"
  ;;
  "-m" )
    check_options
    SOURCES=( "${PATH_ARGS[@]}" )
    TARGET="$MEMORIA:$MEMORIA_MOV"
  ;;
  "-gs" )
    check_options
    SOURCES=( "$MEMORIA:$MEMORIA_SER/${PATH_ARGS[0]}" )
    TARGET="."
  ;;
  "-gm" )
    check_options
    SOURCES=( "$MEMORIA:$MEMORIA_MOV/${PATH_ARGS[0]}" )
    TARGET="."
  ;;
  * )
    if [[ "${PATH_ARGS[0]}" != "-h" ]]; then
      echo "illegal DIRECTION: ${PATH_ARGS[0]}"
    fi
    print_usage
    exit
  ;;
esac

echo "rsync ${SOURCES[@]%/} to $TARGET ${USE_RELATIVE_PATHS:+(using relative path names)}"
if [[ $PRINT_ONLY == true ]]; then
  echo "rsync --progress --partial -t -r \
    ${USE_RELATIVE_PATHS:+-R} ${DRY_RUN:+-n} ${COPY_SYMLINKS:+-l} \
    --perms --chmod=Du=rwx,Dgo=rx,Fa=rw \
    --exclude=\"~*\" --exclude=\".*\" \
    ${SOURCES[@]%/} $TARGET"
else
  rsync --progress --partial -t -r \
    ${USE_RELATIVE_PATHS:+-R} ${DRY_RUN:+-n} ${COPY_SYMLINKS:+-l} \
    --perms --chmod=Du=rwx,Dgo=rx,Fa=rw \
    --exclude="~*" --exclude=".*" \
    "${SOURCES[@]%/}" "$TARGET"
fi
