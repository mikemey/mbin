#!/usr/bin/env bash

function print_usage () {
  echo -e "\n usage: $(basename $0) [DIRECTION] [OPTIONS] file"
  echo -e "\nssh to $HAUMEA when no arguments given."
  echo "DIRECTION"
  echo -e "\t -c  \t send to current (default)"
  echo -e "\t -m  \t send to movies"
  echo -e "\t -gm \t get movies"
  echo "OPTIONS"
  echo -e "\t -R  \t use relative path names"
  echo -e "\t -h  \t show this help"
}

function check_env () {
  if [[ ! ${!1} ]]; then
    echo "Environment variable '$1' not set!"
    exit
  fi
}

check_env HAUMEA
check_env HAUMEA_MOV
check_env HAUMEA_CUR

PATH_ARGS=( "$@" )
USE_RELATIVE_PATHS=

function remove_first_path_arg () {
  PATH_ARGS=( "${PATH_ARGS[@]:1}" )
}

function check_for_relative_paths () {
  if [[ "${PATH_ARGS[0]}" == "-R" ]]; then
    USE_RELATIVE_PATHS=1
    remove_first_path_arg
  fi
}

case "${PATH_ARGS[0]}" in
  "-c" )
    remove_first_path_arg
    check_for_relative_paths
    SOURCES=( "${PATH_ARGS[@]}" )
    TARGET="$HAUMEA:$HAUMEA_CUR"
  ;;
  "-m" )
    remove_first_path_arg
    check_for_relative_paths
    SOURCES=( "${PATH_ARGS[@]}" )
    TARGET="$HAUMEA:$HAUMEA_MOV"
  ;;
  "-gm" )
    remove_first_path_arg
    check_for_relative_paths
    SOURCES=( "$HAUMEA:$HAUMEA_MOV/${PATH_ARGS[0]}" )
    TARGET="."
  ;;
  -[!R] )
    if [[ "${PATH_ARGS[0]}" != "-h" ]]; then
      echo "illegal option ${PATH_ARGS[0]}"
    fi
    print_usage
    exit
  ;;
  * ) # default option uses same path as -c
    check_for_relative_paths
    SOURCES=( "${PATH_ARGS[@]}" )
    TARGET="$HAUMEA:$HAUMEA_CUR"
  ;;
esac

echo "rsync ${SOURCES[@]%/} to $TARGET ${USE_RELATIVE_PATHS:+(using relative path names)}"
rsync --progress --partial -r ${USE_RELATIVE_PATHS:+-R} \
  --perms --chmod=Du=rwx,Dgo=rx,Fa=rw \
  --exclude=".DS*" --exclude="~*" \
  "${SOURCES[@]%/}" "$TARGET"
