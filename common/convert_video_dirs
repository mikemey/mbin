#!/usr/bin/env bash

input_dir="$1"
output_dir="$2"
EXT="mkv"
DRYRUN=true
log_file="convert_log_$(date +%H%M%S).log"

function log() {
  msg="$(date +%H:%M:%S): $1"
  echo -e "$msg"
  if ! $DR; then
    echo "$msg" >> $log_file
  fi
}

function process_all_files() {
  find "$input_dir" -type f -name "*.${EXT}" | while read input_file; do
    output_dirname=$(get_target_directory "$input_file")
    output_dirname="${output_dir}/${output_dirname}"

    output_file=$(get_file_name "$input_file")
    if [ "$?" -ne 0 ]; then
      log "ERROR with file $input_file \n==> $output_file"
      exit 1
    fi
    output_file="${output_dirname}/${output_file}"

    if [ -f "$output_file" ]; then
      log "${FG_LIGHT_RED}skipping existing: >$output_file< ${FG_DEFAULT}"
      continue
    fi

    log "convert: >$output_file<"
    if $DRYRUN; then
      echo "mkdir -p ${output_dirname}"
      echo "convert_file ${input_file} ${output_file}"
    else
      mkdir -p "${output_dirname}"
      convert_file "$input_file" "$output_file"
      if [ "$?" -ne 0 ]; then
        exit 1
      fi
    fi
  done
}

function escape_name() {
  out=${1//. /.}
  out=${out//, /,}
  echo ${out// /.}
}

function get_target_directory() {
    dir=$(dirname "$1")
    dir=${dir##*\/}
    dir=${dir% \(*}
    echo "$dir"
}

function get_file_name() {
  name=$(basename "$1")
  if [[ "$name" =~ (S[0-9]{2}E[0-9]{2})\.(.*) ]]; then
    seep="${BASH_REMATCH[1]}"
    remainder="${BASH_REMATCH[2]}"
    title=${remainder%.*}
  else
    echo "NOT matched: $name"
  fi

  [[ -z $seep ]] && echo "Season/Episode not extracted" && exit 1
  [[ -z $title ]] && echo "Title not extracted" && exit 1

  file_name="${output_dir}.${seep}.${title}.${EXT}"
  echo $(escape_name "$file_name")
}

function convert_file() {
  ffmpeg -i "$1" \
         -loglevel 0 -stats \
         -vf "scale=-2:720" -c:v libx264 -crf 20 -preset slower -pix_fmt yuv420p \
         -c:a copy -c:s copy \
         "$2" </dev/null
}

process_all_files
