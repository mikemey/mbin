#!/usr/bin/env bash

function error_message () {
  echo
  echo "ERROR: $1"
  echo -e "\n usage: $(basename $0) url_pattern max_piece_num output_file"
  echo -e "\nParameters:"
  echo -e "\t url_pattern \t URL pattern to use for iteration"
  echo -e "\t max_piece_num \t upper limit of pieces (inclusive)"
  echo -e "\t output_file \t output file name"
  exit 1
}

function check_file () {
  [[ -f "$1" ]] && error_message "$2 already exists: $1"
}

function check_param () {
  [[ ! "$1" ]] && error_message "$2 not provided!"
}

function check_exit_code () {
  [[ $? -ne 0 ]] && error_message "processing failed: $1"
}

filelist="ts_list.txt"
combined_ts="combined.ts"
hcli_preset="son"
check_file "$filelist" "File list"
check_file "$combined_ts" "Concatenated TS file"

replace="XXX"
urlpattern="$1"
pieces="$2"
outfile="$3"
check_param "$urlpattern" "URL pattern"
if [[ ${urlpattern} != *$replace* ]]; then
  error_message "URL pattern does not contain the replacement pattern \"$replace\""
fi

check_param "$pieces" "upper limit of pieces"
if ! [[ "$pieces" =~ ^[0-9]+$ ]]; then
  error_message "upper limit parameter not a number!"
fi

check_param "$outfile" "Output file"
check_file "$outfile" "Output file"

for count in $(seq 0 $pieces); do
  url="${urlpattern/$replace/$count}"
  tmpfile="$count.ts"
  wget -q --show-progress -O "$tmpfile" "$url"
  check_exit_code "wget"

  echo "file '$tmpfile'" >> $filelist
  sleep 2
 done

ffmpeg -v panic -stats -f concat -safe 0 -i "$filelist" -c copy "$combined_ts"

HandBrakeCLI --preset-import-gui --preset="$hcli_preset" -i "$combined_ts" -o "$outfile" 2> /dev/null
check_exit_code "handbrake"
