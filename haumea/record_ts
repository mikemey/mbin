#!/usr/bin/env bash

function error_message () {
  echo
  echo "ERROR: $1"
  echo -e "\n usage: $(basename $0) url_pattern max_piece_num output_file"
  echo -e "\nParameters:"
  echo -e "\t url_pattern \t URL pattern to use for iteration"
  echo -e "\t max_piece_num \t upper limit of pieces (inclusive)"
  echo -e "\t output_file \t output file name"
  exit 1
}

function check_file_exists () {
  [[ -f "$1" ]] && error_message "$2 already exists: $1"
}

function check_param_exists () {
  [[ ! "$1" ]] && error_message "$2 not provided!"
}

function check_exit_code () {
  [[ $? -ne 0 ]] && error_message "processing failed: $1"
}

out_dir="delete_me"
ts_dir="ts"
mkdir -p "$out_dir/$ts_dir"

filelist="$out_dir/ts_list.txt"
combined_ts="$out_dir/combined.ts"
check_file_exists "$filelist" "File list"
check_file_exists "$combined_ts" "Combined TS file"

enc_preset="son"
urlpattern="$1"
pieces="$2"
outfile="$3"
replace="XXX"
check_param_exists "$urlpattern" "URL pattern"
if [[ ${urlpattern} != *$replace* ]]; then
  error_message "URL pattern does not contain the replacement pattern \"$replace\""
fi

check_param_exists "$pieces" "upper limit of pieces"
if ! [[ "$pieces" =~ ^[0-9]+$ ]]; then
  error_message "upper limit parameter not a number!"
fi

check_param_exists "$outfile" "Output file"
check_file_exists "$outfile" "Output file"

for count in $(seq 0 $pieces); do
  url="${urlpattern/$replace/$count}"
  tmpfile="$count.ts"
  wget -q --show-progress -O "$out_dir/$ts_dir/$tmpfile" "$url"
  check_exit_code "wget"

  printf "      ${FG_LIGHT_YELLOW}${BG_DARK_GRAY}total: $pieces${BG_DEFAULT}${FG_DEFAULT}"
  echo "file '$ts_dir/$tmpfile'" >> $filelist
  sleep 0.5
done

ffmpeg -v panic -stats -f concat -safe 0 -i "$filelist" -c copy "$combined_ts"
check_exit_code "ffmpeg"

HandBrakeCLI --preset-import-gui --preset="$enc_preset" -i "$combined_ts" -o "$outfile" 2> /dev/null
check_exit_code "handbrake"
