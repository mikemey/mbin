#!/usr/bin/env bash

abort_with() {
  echo $1
  cmdName="$(basename -- $0)"
  echo -e "\nusage: $cmdName file title"
  echo -e "       $cmdName -auto [ -d ] extension     automatically sets default title in *.extension files (-d for dry-run)"
  exit
}

COL_GREEN="\033[92m"
COL_RED="\033[91m"
COL_DEFAULT="\033[39m"

replace_title() {
  if [ ! "$2" ]; then
   abort_with "Error: 2 parameters required"
  fi

  if [ ! -f "$1" ]; then
   abort_with "Error: Not a file: $1"
  fi

  TMP_FILE="$1.old"
  mv "$1" "$TMP_FILE"
  ffmpeg -i "$TMP_FILE" -stats -v 0 -c copy -metadata title="$2" "$1"
  rm "$TMP_FILE"
}

dry_run_message() {
  echo -e "================= ${COL_RED} DRY-RUN ${COL_DEFAULT} ================="
}

if [ "$1" == "-auto" ]; then
  if [ "$2" == "-d" ]; then
    dry_run_message
    DRYRUN=1
    shift
  fi

  echo "setting titles in all *.$2 files..."
  epDiv="S[0-9][0-9]E[^.]*"
  for infile in *.${2}; do
    if [ -f "$infile" ]; then
      title=$(echo "$infile" | sed "s/.*$epDiv.\(.*\)\.$2/\1/")
      serName=$(echo "$infile" | sed "s/\(.*\)\.$epDiv.*/\1/")
      epNum=$(echo "$infile" | sed "s/.*\($epDiv\).*/\1/")
      title="${serName//./ } ${epNum} ${title//./ }"
      echo -e "$infile <${COL_GREEN}${title}${COL_DEFAULT}>"
      if [ -z $DRYRUN ]; then
         replace_title "$infile" "$title"
      fi
    fi
  done

  if [ $DRYRUN ]; then
    dry_run_message
  fi
else
  replace_title "$1" "$2"
fi
